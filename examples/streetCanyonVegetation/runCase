#!/bin/bash

# Control variables
solver=buoyantBoussinesqVegetationSimpleFoam
sampleOptions=-latestTime

# Constants
numProcDefault=1

while [[ $# > 1 ]]
do
key="$1"

case $key in
    -n|--nprocessors)
    numProc="$2"
    shift
    ;;
    -o|--option)
    runOption="$2"
    shift
    ;;
    *)

    ;;
esac
shift
done

# Default number of processors
if [ -z $numProc ]; then
    numProc=$numProcDefault
fi

echo "Running solver..."
echo "Num. Procs = $numProc"

# Mesh generation
echo -n "Generating mesh..."
./makeMesh | gzip > log.makeMesh.gz
echo "Done."

# # Mapping initial condition: U, p, T, epsilon, k....
# echo -n "Mapping IC fields..."
# mapFields 0.org/ -consistent -sourceTime 'latestTime' > log.mapfield
# echo "Done."

# Initialize fields and boundaries
echo -n "Initialize fields and boundaries..."
./preCalc | gzip > log.setfield.gz
echo "Done."



# ---------------------   PROCESSING

if [ $numProc -gt 1 ]; then

    # Parallel computation
    echo "Running in parallel..."

    # Deconstruct domain
    echo -n "Deconstructing mesh..."
    if [ "$runOption" != "debug" ]; then
        pyFoamDecompose.py . $numProc | gzip > log.decompose.gz
    else
        pyFoamDecompose.py . $numProc
    fi
    echo "Done."

    # Running solver
    echo -n "Running solver..."
    if [ "$runOption" != "debug" ]; then
        mpiexec -np $numProc foamExec $solver -parallel | gzip > log.solver.gz
    else
        mpiexec -np $numProc foamExec $solver -parallel
    fi
    echo "Done."

    # Reconstruct domain
    echo -n "Reconstructing mesh..."
    if [ "$runOption" != "debug" ]; then
         reconstructPar | gzip > log.reconstruct.gz
    else
         reconstructPar
    fi
    echo "Done."

else
    # Serial computation."
    echo "Running in single processor (serial)..."
    # Running solver
    echo "Running solver..."
    if [ "$runOption" != "debug" ]; then
        foamExec $solver | gzip > log.solver.gz
    else
        foamExec $solver
    fi
    echo "Done."

fi

# Post-processing
#echo -n "Sampling..."

#sample $sampleOptions > log.sample
#echo "Done."

# Clean up
rm processor* -r
